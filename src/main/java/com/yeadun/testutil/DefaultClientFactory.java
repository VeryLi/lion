package com.yeadun.testutil;import com.yeadun.testutil.net.HttpClientFactory;import com.yeadun.testutil.net.HttpHeader;import org.apache.http.client.config.RequestConfig;import org.apache.http.impl.client.HttpClientBuilder;import org.apache.http.message.BasicHeader;public class DefaultClientFactory {    private HttpClientFactory factory;    private String url;    private String builderName;    private RequestConfig.Builder requestConfigBuilder = RequestConfig.custom();    public DefaultClientFactory(HttpClientFactory factory, String builderName, String url) {        this.factory = factory;        this.url = url;        this.builderName = builderName;        initApiHttpClient();    }    public HttpClientFactory._HttpClient getClientInstance() {        // 获取HttpClosableClient，设置请求头        HttpClientFactory._HttpClient client = this.factory.createHttpClient(this.builderName, this.url);        client.addHeader(new BasicHeader(HttpHeader.URLENCODED.getKey(), HttpHeader.URLENCODED.getValue()))                .addHeader(new BasicHeader(HttpHeader.CHARSET_UTF8.getKey(), HttpHeader.CHARSET_UTF8.getValue()))                .addHeader(new BasicHeader(HttpHeader.ACCEPT_CHARSET_UTF8.getKey(), HttpHeader.ACCEPT_CHARSET_UTF8.getValue()));        return client;    }    private void initApiHttpClient() {        // 获取HttpClientBuilder设置请求属性        HttpClientBuilder builder = this.factory.getBuilder(this.builderName, true);        this.requestConfigBuilder.setConnectionRequestTimeout(Config.CONNECT_REQUEST_TIMEOUT)                .setConnectTimeout(Config.CONNECT_TIMEOUT)                .setSocketTimeout(Config.SOCKET_TIMEOUT);        builder.setDefaultRequestConfig(this.requestConfigBuilder.build());    }}