package com.yeadun.testutil.excel;import com.yeadun.testutil.product.ProductWorker;import com.yeadun.testutil.product.Response;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.HashMap;public class ExcelTask implements Runnable {    private static final Logger LOG = LoggerFactory.getLogger(ExcelTask.class);    private ExcelWorker<Response> excelWorker;    private String sheetName;    private int[] rowNums;    private int[] colNums;    private ProductWorker productWorker;    public ExcelTask(ExcelWorker<Response> excelWorker,              String sheetName, int[] rowNums, int[] colNums, ProductWorker productWorker) {        this.excelWorker = excelWorker;        this.sheetName = sheetName;        this.colNums = colNums;        this.rowNums = rowNums;        this.productWorker = productWorker;    }    @Override    public void run() {        try {            HashMap<Integer, Response> result =                    this.excelWorker.execute(this.sheetName, this.rowNums, this.colNums, this.productWorker);            // 日志打印ExcelTask执行结果信息            for (Integer num : result.keySet()) {                Response response = result.get(num);                printLog(num, response);            }            writeResultIntoExcel();        } catch (Exception e) {            LOG.error(e.getMessage(), e);        }    }    public String getSheetName() {        return sheetName;    }    public int[] getRowNums() {        return rowNums;    }    public int[] getColNums() {        return colNums;    }    public ProductWorker getProduct() {        return productWorker;    }    private void writeResultIntoExcel(){//             TODO: 2017/4/20    }    private void printLog(int num, Response response){        LOG.info("收到结果 - [ Thread name: {}, Sheet: {}, product Code: {}, product Name: {} ]" +                        " - No.{} - orderId: {}, merchPrivate: {}, RetCode: {}, RetDesc: {}, RetInfo: {} - " +                        " POJOData: {}",                Thread.currentThread().getName(), this.sheetName, this.productWorker.getProdCode(), this.productWorker.getProdName(),                num, response.getOrderId(), response.getMerchPrivate(), response.getRetCode(), response.getRetDesc(), response.getRetInfo(),                response.getPOJOData(this.productWorker.getType()).toString());    }}