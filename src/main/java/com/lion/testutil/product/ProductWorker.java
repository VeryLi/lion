package com.lion.testutil.product;import com.lion.testutil.Config;import com.lion.testutil.util.format.ProductParamFormat;import com.lion.testutil.util.format.ProductResponseFormat;import com.lion.testutil.util.net.HttpClientFactory;import org.apache.http.annotation.NotThreadSafe;import org.apache.http.message.BasicNameValuePair;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.ArrayList;import java.util.HashMap;/** * <p> * run()方法的参数类型为HashMap<String, String>，包括参数键，参数值 * 返回值为String类型，主要是response的body */@NotThreadSafepublic class ProductWorker extends ProductFunction {    private static final Logger LOG = LoggerFactory.getLogger(ProductWorker.class);    private String prodName;    private String prodCode;    private String merchCode;    private String key;    private HttpClientFactory._HttpClient client;    public ProductWorker(ProductType type, HttpClientFactory._HttpClient client, String merchCode, String key) {        this.merchCode = merchCode;        this.key = key;        this.client = client;        this.prodName = type.getProdName();        this.prodCode = type.getProdCode();    }    @Override    public void prepare() {        if (this.client == null) {            LOG.warn("{} ({})对象中HttpClient为空，选用默认客户端，地址为：{}。",                    this.prodCode, this.prodName, Config.DEFAULT_URL);            this.client = HttpClientFactory                    .getFactory()                    .createHttpClient(HttpClientFactory.DEFAULT_BUILDER, Config.DEFAULT_URL);        }        this.setReady(true);    }    @Override    public Response run(HashMap<String, String> params) {        ArrayList<BasicNameValuePair> postParams =                ProductParamFormat.formatPostParam(this.prodCode, this.merchCode, this.key, params);        client.setPostParameters(postParams);        printLog(params);        String strResult = (String) client.sendPOSTReturnStringBody().get(HttpClientFactory.HTTP_BODY);        return ProductResponseFormat.formatReturnJsonStr(strResult);    }    private void printLog(HashMap<String, String> params) {        LOG.info("{}({}) 传入参数为：", this.prodCode, this.prodName);        for (String key : params.keySet()) {            LOG.info("{}: {}", key, params.get(key));        }    }}